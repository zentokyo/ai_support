from langchain_chroma import Chroma
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain.chains.combine_documents import create_stuff_documents_chain
from langchain_community.llms import GigaChat
from langchain_ollama import OllamaEmbeddings  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω langchain-ollama
from urllib3.exceptions import InsecureRequestWarning
from langchain_core.documents import Document
import os
from dotenv import load_dotenv
import warnings
import ssl

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
warnings.filterwarnings("ignore", category=InsecureRequestWarning)
ssl._create_default_https_context = ssl._create_unverified_context

load_dotenv()

CHROMA_PATH = "./db_metadata_v5"


def initialize_rag():
    print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RAG-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞...")

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    authorization_key = os.getenv("GIGACHAT_AUTHORIZATION_KEY")
    if not authorization_key:
        raise ValueError("–ù–µ –∑–∞–¥–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è GIGACHAT_AUTHORIZATION_KEY –≤ .env —Ñ–∞–π–ª–µ")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM –º–æ–¥–µ–ª—å GigaChat
    model = GigaChat(
        model="GigaChat",
        credentials=authorization_key,
        verify_ssl_certs=False,
        timeout=120,
        profanity_check=False,
        scope="GIGACHAT_API_PERS"
    )

    # –ò–∑–º–µ–Ω–µ–Ω–æ: –ò—Å–ø–æ–ª—å–∑—É–µ–º nomic-embed-text —á–µ—Ä–µ–∑ Ollama
    embedding_function = OllamaEmbeddings(model="nomic-embed-text")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º Chroma
    db = Chroma(persist_directory=CHROMA_PATH, embedding_function=embedding_function)

    # –®–∞–±–ª–æ–Ω prompt'–∞ –¥–ª—è RAG
    prompt_template = ChatPromptTemplate.from_messages([
        (
            "system",
            """
    –í—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —é—Ä–∏—Å—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ–¥ –∏–º–µ–Ω–µ–º ¬´–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç¬ª.

    –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –¥–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ, –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –∏ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ-–¥–µ–ª–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ (–í–æ–∑–¥—É—à–Ω—ã–π_–∫–æ–¥–µ–∫—Å_–†–æ—Å—Å–∏–π—Å–∫–æ–π_–§–µ–¥–µ—Ä–∞—Ü–∏–∏_–æ—Ç_19_–º–∞—Ä—Ç–∞_1997_–≥_N_60_–§–ó, –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π_–∫–æ–¥–µ–∫—Å_–†–æ—Å—Å–∏–π—Å–∫–æ–π_–§–µ–¥–µ—Ä–∞—Ü–∏–∏_–ì–ö_–†–§_—á–∞—Å—Ç–∏_–ø–µ—Ä–≤–∞—è_–≤—Ç–æ—Ä–∞—è, –ó–∞–∫–æ–Ω_–†–§_–æ—Ç_7_—Ñ–µ–≤—Ä–∞–ª—è_1992_–≥_N_2300_I_–û_–∑–∞—â–∏—Ç–µ_–ø—Ä–∞–≤_–ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π, –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π_–∑–∞–∫–æ–Ω_–æ—Ç_25_–∞–ø—Ä–µ–ª—è_2002_–≥_N_40_–§–ó_–û–±_–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–º_—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–∏), —Å—Ç—Ä–æ–≥–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.

    üìå –ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç—ã:
    1. –û—Ç–≤–µ—á–∞–π—Ç–µ –¢–û–õ–¨–ö–û –Ω–∞ **—Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ**
    2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¢–û–õ–¨–ö–û –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–ª–æ–∫–∞ `–∫–æ–Ω—Ç–µ–∫—Å—Ç–∞`
    3. –ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ: "–ú–æ—è –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏. –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º."
    4. –°–æ–±–ª—é–¥–∞–π—Ç–µ **–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ-–¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å**
    5. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π—Ç–µ –æ—Ç–≤–µ—Ç—ã —Å –ø–æ–º–æ—â—å—é **–º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–ª–∏ –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤**
    6. –ü—Ä–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Å—ã–ª–∞–π—Ç–µ—Å—å –Ω–∞ **—Ç–æ—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –≥–ª–∞–≤—ã** (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´—Å—Ç–∞—Ç—å—è 1 –ì–ö –†–§¬ª)
    7. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Ç—Ä–µ–±—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π, –ø—Ä–µ–¥–ª–æ–∂–∏—Ç–µ **–ø–æ—à–∞–≥–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º**
    8. –ù–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–∞–≤–æ–º

    üìö –ö–æ–Ω—Ç–µ–∫—Å—Ç:
    {context}
            """
        ),
        MessagesPlaceholder(variable_name="chat_history"),
        ("human", "{question}")
    ])

    # –°–æ–∑–¥–∞—ë–º —Ü–µ–ø–æ—á–∫—É –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ LLM
    document_chain = create_stuff_documents_chain(llm=model, prompt=prompt_template)

    return db, document_chain


def main():
    try:
        db, document_chain = initialize_rag()

        docs = db.get()
        num_docs = len(docs['documents']) if 'documents' in docs else 0
        print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üîé –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ Chroma: {num_docs}")
        print("=" * 50)
        print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RAG-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç!")
        print("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
        print("-" * 50)

        chat_history = []

        while True:
            user_input = input("–í—ã: ").strip()
            if user_input.lower() in ['exit', '–≤—ã—Ö–æ–¥']:
                print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            if not user_input:
                continue

            results = db.similarity_search(user_input, k=3)
            documents = [
                Document(page_content=doc.page_content, metadata=doc.metadata)
                for doc in results
            ]

            inputs = {
                "question": user_input,
                "context": documents,
                "chat_history": chat_history
            }

            try:
                answer = document_chain.invoke(inputs)
                chat_history.append({"role": "human", "content": user_input})
                chat_history.append({"role": "assistant", "content": answer})

                print("\n–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:\n" + answer)
                print("-" * 50)
            except Exception as e:
                print(f"\n–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")
                print("-" * 50)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}")


if __name__ == "__main__":
    main()