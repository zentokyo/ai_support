from langchain_chroma import Chroma
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain.chains.combine_documents import create_stuff_documents_chain
from langchain_community.llms import GigaChat
from langchain_ollama import OllamaEmbeddings
from urllib3.exceptions import InsecureRequestWarning
from langchain_core.documents import Document
import os
from dotenv import load_dotenv
import warnings
import ssl

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
warnings.filterwarnings("ignore", category=InsecureRequestWarning)
ssl._create_default_https_context = ssl._create_unverified_context

load_dotenv()

CHROMA_PATH = "./db_metadata_v5"


def initialize_rag():
    print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RAG-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞...")

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    authorization_key = os.getenv("GIGACHAT_AUTHORIZATION_KEY")
    if not authorization_key:
        raise ValueError("–ù–µ –∑–∞–¥–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è GIGACHAT_AUTHORIZATION_KEY –≤ .env —Ñ–∞–π–ª–µ")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM –º–æ–¥–µ–ª—å GigaChat —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏
    model = GigaChat(
        model="GigaChat",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
        credentials=authorization_key,
        verify_ssl_certs=False,
        timeout=120,
        profanity_check=False,
        scope="GIGACHAT_API_PERS"
    )

    # –§—É–Ω–∫—Ü–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–∞
    embedding_function = OllamaEmbeddings(model="mxbai-embed-large")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º Chroma
    db = Chroma(persist_directory=CHROMA_PATH, embedding_function=embedding_function)

    # –®–∞–±–ª–æ–Ω prompt'–∞ –¥–ª—è RAG
    prompt_template = ChatPromptTemplate.from_messages([
        (
            "system",
            """
            –í—ã - –æ–ø—ã—Ç–Ω—ã–π —é—Ä–∏—Å—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç —Å –∏–º–µ–Ω–µ–º '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'. 
            –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –¥–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã 
            –Ω–∞ –æ—Å–Ω–æ–≤–µ –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ –†–§ –∏ –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞.

            –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:
            1. –û—Ç–≤–µ—á–∞–π—Ç–µ –¢–û–õ–¨–ö–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
            2. –ë–∞–∑–∏—Ä—É–π—Ç–µ –æ—Ç–≤–µ—Ç—ã –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
            3. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –æ—Ç–≤–µ—á–∞–π—Ç–µ: 
               "–ú–æ—è –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏. 
                –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º."
            4. –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ-–¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è
            5. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π—Ç–µ –æ—Ç–≤–µ—Ç—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤
            6. –¶–∏—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–æ–≤ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            7. –î–ª—è —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –ø–æ—à–∞–≥–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –¥–µ–π—Å—Ç–≤–∏–π
            8. –û—Ç–∫–∞–∑—ã–≤–∞–π—Ç–µ—Å—å –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–µ–ø—Ä–∞–≤–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã

            –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞:
            {context}
            """
        ),
        MessagesPlaceholder(variable_name="chat_history"),
        ("human", "{question}")
    ])

    # –°–æ–∑–¥–∞—ë–º —Ü–µ–ø–æ—á–∫—É –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ LLM
    document_chain = create_stuff_documents_chain(llm=model, prompt=prompt_template)

    return db, document_chain


def main():
    try:
        db, document_chain = initialize_rag()

        docs = db.get()
        num_docs = len(docs['documents']) if 'documents' in docs else 0
        print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üîé –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ Chroma: {num_docs}")
        print("=" * 50)
        print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RAG-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç!")
        print("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
        print("=" * 50)

        chat_history = []

        while True:
            user_input = input("–í—ã: ").strip()
            if user_input.lower() in ['exit', '–≤—ã—Ö–æ–¥']:
                print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            if not user_input:
                continue

            results = db.similarity_search(user_input, k=3)
            documents = [
                Document(page_content=doc.page_content, metadata=doc.metadata)
                for doc in results
            ]

            inputs = {
                "question": user_input,
                "context": documents,
                "chat_history": chat_history
            }

            try:
                answer = document_chain.invoke(inputs)
                chat_history.append({"role": "human", "content": user_input})
                chat_history.append({"role": "assistant", "content": answer})

                print("\n–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:\n" + answer)
                print("-" * 50)
            except Exception as e:
                print(f"\n–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")
                print("-" * 50)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}")


if __name__ == "__main__":
    main()